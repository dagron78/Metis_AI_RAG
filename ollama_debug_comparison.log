2025-04-07 16:34:34,187 - asyncio - DEBUG - Using selector: KqueueSelector
2025-04-07 16:34:34,188 - ollama_debug - INFO - Testing Ollama output comparison with query: Write a Python function to calculate the factorial of a number
2025-04-07 16:34:34,219 - ollama_debug - INFO - Sending request to chat API...
2025-04-07 16:34:34,221 - httpcore.connection - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=60.0 socket_options=None
2025-04-07 16:34:34,222 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x104a6ba10>
2025-04-07 16:34:34,222 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-07 16:34:34,223 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-07 16:34:34,223 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-07 16:34:34,223 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-07 16:34:34,223 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-07 16:34:34,225 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'date', b'Mon, 07 Apr 2025 20:34:33 GMT'), (b'server', b'uvicorn'), (b'www-authenticate', b'Bearer'), (b'content-length', b'30'), (b'content-type', b'application/json')])
2025-04-07 16:34:34,225 - httpx - INFO - HTTP Request: POST http://localhost:8000/api/query?debug_raw=true "HTTP/1.1 401 Unauthorized"
2025-04-07 16:34:34,225 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-07 16:34:34,226 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-07 16:34:34,226 - httpcore.http11 - DEBUG - response_closed.started
2025-04-07 16:34:34,226 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-07 16:34:34,226 - ollama_debug - ERROR - Request failed with status code 401
2025-04-07 16:34:34,226 - ollama_debug - ERROR - Response: {"detail":"Not authenticated"}
2025-04-07 16:34:34,226 - httpcore.connection - DEBUG - close.started
2025-04-07 16:34:34,226 - httpcore.connection - DEBUG - close.complete
2025-04-07 16:34:34,226 - ollama_debug - INFO - 


2025-04-07 16:34:34,226 - ollama_debug - INFO - Testing Ollama output comparison with query: Explain the difference between REST and GraphQL
2025-04-07 16:34:34,230 - ollama_debug - INFO - Sending request to chat API...
2025-04-07 16:34:34,230 - httpcore.connection - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=60.0 socket_options=None
2025-04-07 16:34:34,231 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x104ae5d10>
2025-04-07 16:34:34,231 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-07 16:34:34,232 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-07 16:34:34,232 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-07 16:34:34,232 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-07 16:34:34,232 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-07 16:34:34,256 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'date', b'Mon, 07 Apr 2025 20:34:33 GMT'), (b'server', b'uvicorn'), (b'www-authenticate', b'Bearer'), (b'content-length', b'30'), (b'content-type', b'application/json')])
2025-04-07 16:34:34,256 - httpx - INFO - HTTP Request: POST http://localhost:8000/api/query?debug_raw=true "HTTP/1.1 401 Unauthorized"
2025-04-07 16:34:34,256 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-07 16:34:34,256 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-07 16:34:34,256 - httpcore.http11 - DEBUG - response_closed.started
2025-04-07 16:34:34,256 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-07 16:34:34,256 - ollama_debug - ERROR - Request failed with status code 401
2025-04-07 16:34:34,257 - ollama_debug - ERROR - Response: {"detail":"Not authenticated"}
2025-04-07 16:34:34,257 - httpcore.connection - DEBUG - close.started
2025-04-07 16:34:34,257 - httpcore.connection - DEBUG - close.complete
2025-04-07 16:34:34,257 - ollama_debug - INFO - 


2025-04-07 16:38:29,800 - asyncio - DEBUG - Using selector: KqueueSelector
2025-04-07 16:38:29,800 - ollama_debug - INFO - Testing Ollama output comparison with query: Write a Python function to calculate the factorial of a number
2025-04-07 16:38:29,830 - ollama_debug - INFO - Sending request to chat API...
2025-04-07 16:38:29,834 - httpcore.connection - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-04-07 16:38:29,835 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x1024738c0>
2025-04-07 16:38:29,835 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-07 16:38:29,835 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-07 16:38:29,835 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-07 16:38:29,836 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-07 16:38:29,836 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-07 16:38:30,163 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 07 Apr 2025 20:38:29 GMT'), (b'server', b'uvicorn'), (b'content-length', b'798'), (b'content-type', b'application/json'), (b'x-content-type-options', b'nosniff'), (b'x-frame-options', b'DENY'), (b'x-xss-protection', b'1; mode=block'), (b'referrer-policy', b'same-origin'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains'), (b'content-security-policy', b"default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; connect-src 'self';form-action 'self';")])
2025-04-07 16:38:30,164 - httpx - INFO - HTTP Request: POST http://localhost:8000/api/auth/token "HTTP/1.1 200 OK"
2025-04-07 16:38:30,164 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-07 16:38:30,164 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-07 16:38:30,164 - httpcore.http11 - DEBUG - response_closed.started
2025-04-07 16:38:30,164 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-07 16:38:30,164 - ollama_debug - INFO - Authentication successful, making query request...
2025-04-07 16:38:30,164 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-07 16:38:30,165 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-07 16:38:30,165 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-07 16:38:30,165 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-07 16:38:30,165 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-07 16:38:30,190 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 404, b'Not Found', [(b'date', b'Mon, 07 Apr 2025 20:38:29 GMT'), (b'server', b'uvicorn'), (b'content-length', b'22'), (b'content-type', b'application/json'), (b'x-content-type-options', b'nosniff'), (b'x-frame-options', b'DENY'), (b'x-xss-protection', b'1; mode=block'), (b'referrer-policy', b'same-origin'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains'), (b'content-security-policy', b"default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; connect-src 'self';form-action 'self';")])
2025-04-07 16:38:30,191 - httpx - INFO - HTTP Request: POST http://localhost:8000/api/query?debug_raw=true "HTTP/1.1 404 Not Found"
2025-04-07 16:38:30,191 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-07 16:38:30,191 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-07 16:38:30,191 - httpcore.http11 - DEBUG - response_closed.started
2025-04-07 16:38:30,191 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-07 16:38:30,191 - ollama_debug - ERROR - Request failed with status code 404
2025-04-07 16:38:30,191 - ollama_debug - ERROR - Response: {"detail":"Not Found"}
2025-04-07 16:38:30,191 - httpcore.connection - DEBUG - close.started
2025-04-07 16:38:30,191 - httpcore.connection - DEBUG - close.complete
2025-04-07 16:38:30,191 - ollama_debug - INFO - 


2025-04-07 16:38:30,191 - ollama_debug - INFO - Testing Ollama output comparison with query: Explain the difference between REST and GraphQL
2025-04-07 16:38:30,195 - ollama_debug - INFO - Sending request to chat API...
2025-04-07 16:38:30,195 - httpcore.connection - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-04-07 16:38:30,196 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x1024fe990>
2025-04-07 16:38:30,197 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-07 16:38:30,197 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-07 16:38:30,197 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-07 16:38:30,197 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-07 16:38:30,197 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-07 16:38:30,424 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 07 Apr 2025 20:38:29 GMT'), (b'server', b'uvicorn'), (b'content-length', b'798'), (b'content-type', b'application/json'), (b'x-content-type-options', b'nosniff'), (b'x-frame-options', b'DENY'), (b'x-xss-protection', b'1; mode=block'), (b'referrer-policy', b'same-origin'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains'), (b'content-security-policy', b"default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; connect-src 'self';form-action 'self';")])
2025-04-07 16:38:30,425 - httpx - INFO - HTTP Request: POST http://localhost:8000/api/auth/token "HTTP/1.1 200 OK"
2025-04-07 16:38:30,425 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-07 16:38:30,425 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-07 16:38:30,425 - httpcore.http11 - DEBUG - response_closed.started
2025-04-07 16:38:30,425 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-07 16:38:30,425 - ollama_debug - INFO - Authentication successful, making query request...
2025-04-07 16:38:30,425 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-07 16:38:30,425 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-07 16:38:30,425 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-07 16:38:30,425 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-07 16:38:30,425 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-07 16:38:30,475 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 404, b'Not Found', [(b'date', b'Mon, 07 Apr 2025 20:38:29 GMT'), (b'server', b'uvicorn'), (b'content-length', b'22'), (b'content-type', b'application/json'), (b'x-content-type-options', b'nosniff'), (b'x-frame-options', b'DENY'), (b'x-xss-protection', b'1; mode=block'), (b'referrer-policy', b'same-origin'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains'), (b'content-security-policy', b"default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; connect-src 'self';form-action 'self';")])
2025-04-07 16:38:30,476 - httpx - INFO - HTTP Request: POST http://localhost:8000/api/query?debug_raw=true "HTTP/1.1 404 Not Found"
2025-04-07 16:38:30,476 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-07 16:38:30,476 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-07 16:38:30,476 - httpcore.http11 - DEBUG - response_closed.started
2025-04-07 16:38:30,476 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-07 16:38:30,476 - ollama_debug - ERROR - Request failed with status code 404
2025-04-07 16:38:30,476 - ollama_debug - ERROR - Response: {"detail":"Not Found"}
2025-04-07 16:38:30,476 - httpcore.connection - DEBUG - close.started
2025-04-07 16:38:30,476 - httpcore.connection - DEBUG - close.complete
2025-04-07 16:38:30,476 - ollama_debug - INFO - 


2025-04-07 16:38:51,090 - asyncio - DEBUG - Using selector: KqueueSelector
2025-04-07 16:38:51,090 - ollama_debug - INFO - Testing Ollama output comparison with query: Write a Python function to calculate the factorial of a number
2025-04-07 16:38:51,110 - ollama_debug - INFO - Sending request to chat API...
2025-04-07 16:38:51,112 - httpcore.connection - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-04-07 16:38:51,113 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x104faf8c0>
2025-04-07 16:38:51,113 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-07 16:38:51,114 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-07 16:38:51,114 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-07 16:38:51,114 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-07 16:38:51,114 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-07 16:38:51,415 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 07 Apr 2025 20:38:50 GMT'), (b'server', b'uvicorn'), (b'content-length', b'798'), (b'content-type', b'application/json'), (b'x-content-type-options', b'nosniff'), (b'x-frame-options', b'DENY'), (b'x-xss-protection', b'1; mode=block'), (b'referrer-policy', b'same-origin'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains'), (b'content-security-policy', b"default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; connect-src 'self';form-action 'self';")])
2025-04-07 16:38:51,415 - httpx - INFO - HTTP Request: POST http://localhost:8000/api/auth/token "HTTP/1.1 200 OK"
2025-04-07 16:38:51,415 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-07 16:38:51,415 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-07 16:38:51,415 - httpcore.http11 - DEBUG - response_closed.started
2025-04-07 16:38:51,415 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-07 16:38:51,415 - ollama_debug - INFO - Authentication successful, making query request...
2025-04-07 16:38:51,416 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-07 16:38:51,416 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-07 16:38:51,416 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-07 16:38:51,416 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-07 16:38:51,416 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-07 16:39:05,064 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 07 Apr 2025 20:38:50 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1880'), (b'content-type', b'application/json'), (b'x-content-type-options', b'nosniff'), (b'x-frame-options', b'DENY'), (b'x-xss-protection', b'1; mode=block'), (b'referrer-policy', b'same-origin'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains'), (b'content-security-policy', b"default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; connect-src 'self';form-action 'self';")])
2025-04-07 16:39:05,068 - httpx - INFO - HTTP Request: POST http://localhost:8000/api/chat/query?debug_raw=true "HTTP/1.1 200 OK"
2025-04-07 16:39:05,069 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-07 16:39:05,069 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-07 16:39:05,069 - httpcore.http11 - DEBUG - response_closed.started
2025-04-07 16:39:05,070 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-07 16:39:05,070 - ollama_debug - INFO - Request successful!
2025-04-07 16:39:05,070 - ollama_debug - INFO - ================================================================================
2025-04-07 16:39:05,070 - ollama_debug - INFO - RAW OLLAMA OUTPUT:
2025-04-07 16:39:05,070 - ollama_debug - INFO - ================================================================================
2025-04-07 16:39:05,070 - ollama_debug - INFO - {
  "text": "Here's a Python function to calculate the factorial of a number. The function takes an integer as input and returns its factorial. It includes error handling to ensure the input is a non-negative integer. {CODE_BLOCK_0}",
  "code_blocks": [
    {
      "language": "python",
      "code": "def calculate_factorial(number):\n    \"\"\"Calculates the factorial of a non-negative integer.\n\n    Args:\n        number (int): The number to calculate the factorial of.\n\n    Returns:\n        int: The factorial of the number.\n        None: If the input is not a non-negative integer.\n    \"\"\"\n    if not isinstance(number, int) or number < 0:\n        print(\"Error: Input must be a non-negative integer.\")\n        return None\n\n    if number == 0:\n        return 1\n    else:\n        factorial = 1\n        for i in range(1, number + 1):\n            factorial *= i\n        return factorial"
    }
  ]
}
2025-04-07 16:39:05,070 - ollama_debug - INFO - 
================================================================================
2025-04-07 16:39:05,070 - ollama_debug - INFO - PROCESSED OUTPUT:
2025-04-07 16:39:05,070 - ollama_debug - INFO - ================================================================================
2025-04-07 16:39:05,070 - ollama_debug - INFO - Here's a Python function to calculate the factorial of a number. The function takes an integer as input and returns its factorial. It includes error handling to ensure the input is a non-negative integer. ```python

python

def calculate_factorial(number):
 """Calculates the factorial of a non-negative integer.

 Args:
 number(int): The number to calculate the factorial of.

 Returns:
 int: The factorial of the number.
 None: If the input is not a non-negative integer.
 """
 if not isinstance(number, int) or number < 0:
 print("Error: Input must be a non-negative integer. ")
 return None

 if number == 0:
 return 1
 else:
 factorial = 1
 for i in range(1, number + 1):
 factorial *= i
 return factorial

```
2025-04-07 16:39:05,071 - ollama_debug - INFO - Outputs saved to raw_output_20250407_163905.txt and processed_output_20250407_163905.txt
2025-04-07 16:39:05,071 - httpcore.connection - DEBUG - close.started
2025-04-07 16:39:05,071 - httpcore.connection - DEBUG - close.complete
2025-04-07 16:39:05,071 - ollama_debug - INFO - 


2025-04-07 16:39:05,071 - ollama_debug - INFO - Testing Ollama output comparison with query: Explain the difference between REST and GraphQL
2025-04-07 16:39:05,078 - ollama_debug - INFO - Sending request to chat API...
2025-04-07 16:39:05,078 - httpcore.connection - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-04-07 16:39:05,079 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x105036990>
2025-04-07 16:39:05,080 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-07 16:39:05,080 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-07 16:39:05,080 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-07 16:39:05,080 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-07 16:39:05,080 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-07 16:39:05,340 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 07 Apr 2025 20:39:04 GMT'), (b'server', b'uvicorn'), (b'content-length', b'798'), (b'content-type', b'application/json'), (b'x-content-type-options', b'nosniff'), (b'x-frame-options', b'DENY'), (b'x-xss-protection', b'1; mode=block'), (b'referrer-policy', b'same-origin'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains'), (b'content-security-policy', b"default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; connect-src 'self';form-action 'self';")])
2025-04-07 16:39:05,341 - httpx - INFO - HTTP Request: POST http://localhost:8000/api/auth/token "HTTP/1.1 200 OK"
2025-04-07 16:39:05,341 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-07 16:39:05,341 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-07 16:39:05,341 - httpcore.http11 - DEBUG - response_closed.started
2025-04-07 16:39:05,341 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-07 16:39:05,341 - ollama_debug - INFO - Authentication successful, making query request...
2025-04-07 16:39:05,341 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-07 16:39:05,341 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-07 16:39:05,341 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-07 16:39:05,341 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-07 16:39:05,341 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-07 16:39:17,677 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Mon, 07 Apr 2025 20:39:04 GMT'), (b'server', b'uvicorn'), (b'content-length', b'3649'), (b'content-type', b'application/json'), (b'x-content-type-options', b'nosniff'), (b'x-frame-options', b'DENY'), (b'x-xss-protection', b'1; mode=block'), (b'referrer-policy', b'same-origin'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains'), (b'content-security-policy', b"default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; connect-src 'self';form-action 'self';")])
2025-04-07 16:39:17,678 - httpx - INFO - HTTP Request: POST http://localhost:8000/api/chat/query?debug_raw=true "HTTP/1.1 200 OK"
2025-04-07 16:39:17,678 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-07 16:39:17,678 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-07 16:39:17,678 - httpcore.http11 - DEBUG - response_closed.started
2025-04-07 16:39:17,679 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-07 16:39:17,679 - ollama_debug - INFO - Request successful!
2025-04-07 16:39:17,679 - ollama_debug - INFO - ================================================================================
2025-04-07 16:39:17,679 - ollama_debug - INFO - RAW OLLAMA OUTPUT:
2025-04-07 16:39:17,679 - ollama_debug - INFO - ================================================================================
2025-04-07 16:39:17,679 - ollama_debug - INFO - Okay, let’s break down the differences between REST and GraphQL.

Essentially, they’re both ways to fetch data from a server, but they approach it very differently.

**REST (Representational State Transfer)** is an architectural style. Think of it like this: you make requests to specific URLs (endpoints) to get data. Each endpoint represents a resource – like a user, a product, or a blog post.  You typically get a fixed set of data for each request. For example, you might request a user’s profile, and you’ll always get the same information (name, email, address) regardless of what else you might need. REST relies on standard HTTP methods (GET, POST, PUT, DELETE) to interact with these resources.

**GraphQL**, on the other hand, is a query language for your APIs. Instead of the server defining what data you get, *you* tell the server exactly what data you need. You send a single query that specifies the fields you want, and the server returns only those fields. This is great for efficiency, especially on mobile devices, as it reduces the amount of data transferred.

**Here’s a table summarizing the key differences:**

| Feature          | REST                     | GraphQL                |
|------------------|--------------------------|------------------------|
| **Data Fetching** | Multiple endpoints, fixed data | Single query, flexible data |
| **Efficiency**     | Can be less efficient     | More efficient          |
| **Flexibility**    | Less flexible            | More flexible          |
| **Schema**         | Implicit                 | Explicit (Strongly typed)|



Do you want me to delve deeper into a specific aspect, like how they handle relationships between data, or perhaps give an example of when one might be preferred over the other?
2025-04-07 16:39:17,679 - ollama_debug - INFO - 
================================================================================
2025-04-07 16:39:17,679 - ollama_debug - INFO - PROCESSED OUTPUT:
2025-04-07 16:39:17,679 - ollama_debug - INFO - ================================================================================
2025-04-07 16:39:17,679 - ollama_debug - INFO - Okay, let’s break down the differences between REST and GraphQL.

Essentially, they’re both ways to fetch data from a server, but they approach it very differently.

**REST (Representational State Transfer)** is an architectural style. Think of it like this: you make requests to specific URLs (endpoints) to get data. Each endpoint represents a resource – like a user, a product, or a blog post. You typically get a fixed set of data for each request. For example, you might request a user’s profile, and you’ll always get the same information (name, email, address) regardless of what else you might need. REST relies on standard HTTP methods (GET, POST, PUT, DELETE) to interact with these resources.

**GraphQL**, on the other hand, is a query language for your APIs. Instead of the server defining what data you get, *you* tell the server exactly what data you need. You send a single query that specifies the fields you want, and the server returns only those fields. This is great for efficiency, especially on mobile devices, as it reduces the amount of data transferred.

**Here’s a table summarizing the key differences: **

| Feature | REST | GraphQL |
|------------------|--------------------------|------------------------|
| **Data Fetching** | Multiple endpoints, fixed data | Single query, flexible data |
| **Efficiency** | Can be less efficient | More efficient |
| **Flexibility** | Less flexible | More flexible |
| **Schema** | Implicit | Explicit (Strongly typed)|

Do you want me to delve deeper into a specific aspect, like how they handle relationships between data, or perhaps give an example of when one might be preferred over the other? 
2025-04-07 16:39:17,679 - ollama_debug - INFO - Outputs saved to raw_output_20250407_163917.txt and processed_output_20250407_163917.txt
2025-04-07 16:39:17,679 - httpcore.connection - DEBUG - close.started
2025-04-07 16:39:17,679 - httpcore.connection - DEBUG - close.complete
2025-04-07 16:39:17,679 - ollama_debug - INFO - 


